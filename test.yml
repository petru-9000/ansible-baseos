- name: Inv
  hosts: all
  become: true
  become_method: ansible.builtin.sudo

  tasks:
    # - name: Set hostname
      # assumes 'inventory_hostname' is fqdn
      # ansible.builtin.hostname:
      #   name: "{{ inventory_hostname }}"
      #   use: systemd

    - name: Set hostsfile
    # assumes a single interface
    # could also loop through ip's in 'ansible_all_ipv4_addresses'
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: "{{ hostvars[inventory_hostname]['ansible_facts'][ansible_default_ipv4.interface]['ipv4']['address'] }}"
        line: >
          {{ hostvars[inventory_hostname]['ansible_facts'][ansible_default_ipv4.interface]['ipv4']['address'] }}
          {{ inventory_hostname | split('.') | first }}
          {{ inventory_hostname }}
        state: present

    - name: Set PS1
      # ansible.builtin.copy:
      #   content: "PS1=\"[{{ inventory_hostname | split('.') | first }}-\\u@\\h \\W]\\$ \""
      #   content: "{{ ps1_str }}"
      #   dest: /etc/profile.d/ps1.sh
      #   owner: root
      #   group: root
      #   mode: '0755'
      ansible.builtin.template:
        src: ps1.sh.j2
        dest: /etc/profile.d/ps1.sh
        owner: root
        group: root
        mode: '0755'

    - name: Create volume groups
      community.general.lvg:
        vg: "{{ item.name }}"
        pvs: "{{ item.pv }}"
      loop: "{{ _vgs | default([]) }}"


    - name: Create logical volumes
      community.general.lvol:
        vg: "{{ item.vg }}"
        lv: "{{ item.name }}"
        size: "{{ item.size }}"
      register: new_vol
      loop: "{{ _swap_lvs | default([]) }}"

    - name: Format filesystems
      community.general.filesystem:
        fstype: swap
        dev: "/dev/{{ item.vg }}/{{ item.name }}"
      register: new_lv
      loop: "{{ _swap_lvs | default([]) }}"

    # # This will find all swap-formatted lv's that are not swapon-ed, not just new ones
    # - name: Find unused swap partitions
    #   ansible.builtin.shell:
    #     cmd: >
    #       set -o pipefail &&
    #       for vol in $(lsblk -o KNAME,FSTYPE | awk '$2 == "swap" {printf "/dev/%s\n",$1}'); do
    #       swapon -s | grep -Fw "$vol" >/dev/null || echo $vol;
    #       done
    #     executable: /usr/bin/bash
    #   register: swap_available
    #   changed_when: false

    - name: Enable swap
      ansible.builtin.command: "swapon {{ item }}"
      when: item
      changed_when: true
      # loop: "{{ swap_available.stdout_lines }}"
      loop: >
        {{
        new_lv.results |
        selectattr('changed', 'equalto', True) |
        map(attribute='invocation.module_args.dev')
        }}


    - name: Add swap entries to /etc/fstab
      ansible.posix.mount:
        name: none
        src: "/dev/{{ item.vg }}/{{ item.name }}"
        fstype: swap
        opts: sw
        state: present
      loop: "{{ _swap_lvs | default([]) }}"

    - name: Reload daemon
      ansible.builtin.systemd:
        daemon_reload: true
